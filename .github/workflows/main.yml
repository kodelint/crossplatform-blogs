name: Publish articles on dev.to
on:
  push:
    paths:
      - dev.to/**
jobs:
  build:
    name: Publisher for Dev.to
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Publishing articles on dev.to
      uses: sinedied/publish-devto@v2
      with:
        # Your dev.to personal API key to publish and update articles.
        # See https://docs.dev.to/api/#section/Authentication/api_key
        devto_key: ${{ secrets.DEVTO_TOKEN }}
        # Your GitHub personal access token, used to create commits for updated files.
        # If you have a protected branch, you need to use a personal access token
        # with the 'repo' permission.
        # See https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
        github_token: ${{ secrets.BLOG_POST_TOKEN_GITHUB }}
        # (Optional) The files to publish. Default is "posts/**/*.md"
        files: 'dev.to/*.md'
        # (Optional) The git branch to use. Default is 'main'.
        branch: main
        # (Optional) Use conventional commit messages. Default is false.
        # See https://www.conventionalcommits.org.
        conventional_commits: true
        # (Optional) Do not make actual changes on dev.to.
        dry_run: false

name: publish-to-medium
on:
  push:
    paths:
      - medium/**

jobs:
  build:
    name: publish-to-medium
    runs-on: ubuntu-latest
    steps:
    - id: files
    uses: jitterbit/get-changed-files@v1
    - id: posts
      name: Detecting posts from the changes
      run: |
        i=0
        for changed_file in ${{ steps.files.outputs.added_modified }}; do
          echo "Do something with ${changed_file}."
          if [[ "${changed_file}" == "medium/"* ]];
          then
            echo "File ${changed_file} matched post."
            echo "::set-output name=post${i}::${changed_file}"
            ((i=i+1))
          fi
        done
    - if: steps.posts.outputs.post0
      name: Publish to medium
      uses: infraway/post-medium-action@v1.5.0
      with:
        access_token: ${{ secrets.MEDIUM_ACCESS_TOKEN }}
        markdown_file: ${{ steps.posts.outputs.post0 }}
        base_url: https://medium.com/@email2sroy
        post_url: https://medium.com/@email2sroy
        post_status: draft
